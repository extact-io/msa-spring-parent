name: deploy-to-ecs-job

on:
  workflow_call:
    inputs:
      repo:
        required: true
        type: string
      aws-appname:
        type: string
      ecs-taskname:
        type: string
      ecs-containername:
        type: string
      container-registry:
        type: string
        default: "ghcr.io"
      image-name:
        type: string
      ecs-clustername:
        type: string
        default: "rms-service-cluster"

jobs:
  deploy_to_ecs:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
    - name: Download build Artifact of IMAGE_TAG
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.aws-appname }}-image_tag
        path: download
    - name: Prepare IMAGE_TAG
      run: echo "IMAGE_TAG=`cat ./download/image_tag`" >> $GITHUB_ENV
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/aws-identity-providers-federation-github-actions
        aws-region: ap-northeast-1
    - name: Download task definition
      run: |
        aws ecs describe-task-definition \
          --task-definition ${{ inputs.ecs-taskname }} \
          --query taskDefinition \
          > task-definition.json
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: ${{ inputs.ecs-containername }}
        image: ${{ inputs.container-registry }}/${{ inputs.image-name }}:${{ env.IMAGE_TAG }}
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ inputs.aws-appname }}
        cluster: ${{ inputs.ecs-clustername }}
        wait-for-service-stability: false